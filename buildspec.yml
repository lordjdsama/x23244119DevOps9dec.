version: 0.2
 
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip install --upgrade pip
      - pip install -r requirements.txt
      - pip install pylint
 
  pre_build:
    commands:
      - echo "Building the project..."
      - python --version
      - pylint $CODEBUILD_SRC_DIR/*.py || true
      - pylint $CODEBUILD_SRC_DIR/expense/*.py || true
      - pylint --disable=R0903,E1101 $CODEBUILD_SRC_DIR/expense/*.py || true
 
artifacts:
  files:
    - '**/*'

sonar-scanner \
  -Dsonar.organization=x23244119 \
  -Dsonar.projectKey=lordjdsama_x23244119DevOps9dec. \
  -Dsonar.sources=. \
  -Dsonar.host.url=https://sonarcloud.io
  
  
  

# env:
#   secrets-manager:
#     LOGIN: prod/sonar:sonartoken
#     HOST: prod/sonar:HOST
#     Organization: prod/sonar:Organization
#     Project: prod/sonar:Project
# phases:
#   install:
#     runtime-versions:
#       java: openjdk11
#   pre_build:
#     commands:
#       - apt-get update
#       - apt-get install -y jq
#       - wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
#       - tar xzf apache-maven-3.5.4-bin.tar.gz
#       - ln -s apache-maven-3.5.4 maven
#       - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
#       - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
#       - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
#   build:
#     commands:
#       - mvn test     
#       - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
#       - sleep 5
#       - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
#       - cat result.json
#       - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi